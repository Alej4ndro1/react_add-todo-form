{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","todoId","App","useState","setTitle","setUserId","currentTodos","setCurrentTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","selected","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9878e3c0.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype UserType = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<UserType> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype TodoType = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<TodoType> = ({ todo }) => {\n  const { title, completed } = todo;\n\n  return (\n    <>\n      <article\n        data-id={todo.id}\n        className={classNames('TodoInfo', {\n          'TodoInfo--completed': completed === true,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n        {todo.user\n          ? <UserInfo user={todo.user} />\n          : null}\n      </article>\n    </>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype TodoType = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<TodoType> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => <TodoInfo key={todo.id} todo={todo} />)}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst todoId = todos.map(({ id }) => id);\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [currentTodos, setCurrentTodos] = useState([...todos]);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const addHandler = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (title === '') {\n      setTitleError(true);\n    }\n\n    if (userId === 0) {\n      setUserError(true);\n    }\n\n    if (title === '' || userId === 0) {\n      return;\n    }\n\n    const newTodo = {\n      id: Math.max(...todoId) + 1,\n      userId,\n      title,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    setCurrentTodos((prevTodos) => {\n      return [...prevTodos, newTodo];\n    });\n\n    setTitle('');\n    setUserId(0);\n    setTitleError(false);\n    setUserError(false);\n  };\n\n  const titleHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const userHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addHandler}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={titleHandler}\n          />\n          {titleError && <span className=\"error\"> Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"user\"\n            value={userId}\n            onChange={userHandler}\n          >\n            <option value=\"0\" disabled selected>Choose a user</option>\n            {usersFromServer.map(user => {\n              return (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              );\n            })}\n          </select>\n\n          {userError && <span className=\"error\"> Please choose a user</span>}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={currentTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}